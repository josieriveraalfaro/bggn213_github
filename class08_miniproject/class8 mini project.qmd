---
title: "Class 08 Mini-Project"
author: "Josie (A11433761)"
format: pdf
---

Side_Note:
Let's look at the mean value of every column:
```{r}
head(mtcars)
apply(mtcars, 2, mean)
```
Let's look at "spread" via `sd()`
```{r}
apply(mtcars, 2, sd)
```

```{r}
pca<-prcomp(mtcars)
biplot(pca)
```
Let's try scalling the data:
```{r}
mtscale<-scale(mtcars)
head(mtscale)
```
What is the mean of each "dimension" /column in mtscale?
```{r}
round(apply(mtscale, 2, mean, 3))
round(apply(mtscale, 2, sd, 3))

```
Let's plot `mpg` vs `disp` for both mtcars and after the scaled data in `mtscale`
```{r}
library(ggplot2)
ggplot(mtcars)+
  aes(mpg,disp)+
  geom_point()
```
```{r}
ggplot(mtscale)+
  aes(mpg,disp)+
  geom_point()
```

```{r}
pca2<-prcomp(mtscale)
biplot(pca2)
```
## Breast Cancer FNA data

Download file and move it to project folder or directly download to project folder
```{r}
fna.data <- "WisconsinCancer.csv"
wisc.df<-read.csv(fna.data, row.names=1)
head(wisc.df)
```
Removing `diagnosis` by creating data frame that removes the first column
```{r}
wisc.data<-wisc.df[,-1]
wisc.data<-wisc.data[,-31]
diagnosis<-as.factor(wisc.df$diagnosis)

#How many rows? Patients
nrow(wisc.df)
#How many M (cancer) and B (benign)?
table(wisc.df$diagnosis)
#colnames
length(grep("_mean",colnames(wisc.data)))

```
## Principal Component Analysis
We want to scale our data before PCA by setting scale=TRUE
```{r}
#colMeans(wisc.data)
#apply(wisc.data, 2,sd)
wisc.pr <- prcomp(wisc.data,scale=TRUE)
x<-summary(wisc.pr)
x$importance

```
```{r}
plot(wisc.pr$x,col=diagnosis)
```

```{r}
biplot(wisc.pr)
```

```{r}
plot(wisc.pr$x, col=diagnosis, xlab="PC1", ylab="PC2")
```

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```
## Variance explained
```{r}
pr.var<-wisc.pr$sdev^2
head(pr.var)
pve<-pr.var/30 #total variance divided by number of PC
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```
Alternative plot data driven y-axis
```{r}
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

## Communicating PCA results

```{r}
head(wisc.pr$rotation[,1])

```



## Clustering
```{r}
km<-kmeans(wisc.data,centers=2)
table(km$cluster)
```

```{r}
d<-dist(wisc.data)
hc<-hclust(d)
plot(hc)
abline(h=2000, col="red", lty=2)
```
## Cluster in PC 
Use my PCA results as a baisis of clustering

```{r}
d<-dist(wisc.pr$x[,1:3])
hc<-hclust(d, method="ward.D2")
plot(hc)
```
Cut this tree to yield 2 groups/clusters
```{r}
grps<-cutree(hc,k=2)
table(grps)
table(diagnosis)
```
```{r}
table(diagnosis,grps)
```
## Using different methods
"single", "complete", "average" and  "ward.D2"


## Prediction

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
plot(wisc.pr$x[,1:2], col=diagnosis)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

